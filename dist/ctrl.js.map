{"version":3,"sources":["../src/ctrl.js"],"names":["d3","panelDefaults","fontSizes","fontTypes","unitFormats","getUnitFormats","operatorNameOptions","valueMaps","value","op","text","mappingTypes","name","rangeMaps","from","to","tickMaps","mappingType","thresholds","colors","decimals","format","operatorName","gauge","minValue","maxValue","tickSpaceMinVal","tickSpaceMajVal","gaugeUnits","gaugeRadius","pivotRadius","padding","edgeWidth","tickEdgeGap","tickLengthMaj","tickLengthMin","needleTickGap","needleLengthNeg","ticknessGaugeBasis","needleWidth","tickWidthMaj","tickWidthMin","unitsLabelFontSize","labelFontSize","zeroTickAngle","maxTickAngle","zeroNeedleAngle","maxNeedleAngle","outerEdgeCol","innerCol","pivotCol","needleCol","unitsLabelCol","tickLabelCol","tickColMaj","tickColMin","tickFont","unitsFont","valueYOffset","showThresholdOnGauge","showThresholdColorOnValue","showLowerThresholdRange","showMiddleThresholdRange","showUpperThresholdRange","animateNeedleValueTransition","animateNeedleValueTransitionSpeed","D3GaugePanelCtrl","$scope","$injector","alertSrv","defaults","panel","gaugeDivId","id","containerDivId","scoperef","alertSrvRef","initialized","panelContainer","svgContainer","svg","panelWidth","panelHeight","gaugeObject","data","valueFormatted","valueRounded","series","events","on","onInitEditMode","bind","onDataReceived","onDataError","panels","grafanaBootData","settings","thisPanel","pluginId","thisPanelPath","baseUrl","optionsPath","addEditorTab","radialMetricsPath","thresholdingPath","mappingsPath","container","viewPortWidth","Math","max","document","documentElement","clientWidth","window","innerWidth","pixelsPerSpan","trueWidth","round","span","tmpPanelHeight","height","String","row","replace","actualHeight","parseInt","length","remove","setValues","panelTitleOffset","title","getPanelWidthBySpan","getPanelHeight","margin","top","right","bottom","left","width","tmpGaugeRadius","parseFloat","select","append","attr","classed","opt","minVal","maxVal","thresholdColors","needleValText","getValueText","needleVal","getValueRounded","drawGauge","map","index","indexOf","splice","render","push","rangeMap","tickMap","set","isNaN","gaugeTickDegrees","gaugeNeedleDegrees","scope","elem","attrs","ctrl","gaugeByClass","find","childNodes","setContainer","renderGauge","renderingCompleted","isNumber","scaledDecimals","delta","dec","floor","log","LN10","magn","pow","norm","size","result","flotpairs","error","Error","message","JSON","stringify","lastPoint","last","datapoints","lastValue","isArray","alias","isString","escape","stats","decimalInfo","getDecimalsForValue","formatFunc","valueFormats","roundValue","scopedVars","__name","label","i","j","subItem","err","dataList","seriesHandler","updateGauge","seriesData","target","getFlotPairs","nullPointMode","tmp","getColorForValue","colorMap","first","templateUrl","MetricsPanelCtrl"],"mappings":"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","file":"ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport kbn from 'app/core/utils/kbn';\nimport config from 'app/core/config';\nimport TimeSeries from 'app/core/time_series2';\n//import * as d3 from '../bower_components/d3/d3.js';\nimport * as d3 from './external/d3.v3.min';\nimport './css/panel.css!';\nimport './external/d3gauge';\n\nconst panelDefaults = {\n  fontSizes: [4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70],\n  fontTypes: [\n    'Arial', 'Avant Garde', 'Bookman',\n    'Consolas', 'Courier', 'Courier New',\n    'Garamond', 'Helvetica', 'Open Sans',\n    'Palatino', 'Times', 'Times New Roman',\n    'Verdana'\n  ],\n  unitFormats: kbn.getUnitFormats(),\n  operatorNameOptions: ['min','max','avg', 'current', 'total', 'name'],\n  valueMaps: [\n    { value: 'null', op: '=', text: 'N/A' }\n  ],\n  mappingTypes: [\n    {name: 'value to text', value: 1},\n    {name: 'range to text', value: 2},\n  ],\n  rangeMaps: [\n    { from: 'null', to: 'null', text: 'N/A' }\n  ],\n  tickMaps: [],\n  mappingType: 1,\n  thresholds: '',\n  colors: [\"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\"],\n  decimals: 2, // decimal precision\n  format: 'none', // unit format\n  operatorName: 'avg', // operator applied to time series\n  gauge: {\n    minValue: 0,\n    maxValue: 100,\n    tickSpaceMinVal: 1,\n    tickSpaceMajVal: 10,\n    gaugeUnits: '', // no units by default, this will be selected by user\n    gaugeRadius: 0, // 0 for auto-scale\n    pivotRadius: 0.1,\n    padding: 0.05,\n    edgeWidth: 0.05,\n    tickEdgeGap: 0.05,\n    tickLengthMaj: 0.15,\n    tickLengthMin: 0.05,\n    needleTickGap: 0.05,\n    needleLengthNeg: 0.2,\n    ticknessGaugeBasis: 200,\n    needleWidth: 5,\n    tickWidthMaj: 5,\n    tickWidthMin: 1,\n    unitsLabelFontSize: 22,\n    labelFontSize: 18,\n    zeroTickAngle: 60,\n    maxTickAngle: 300,\n    zeroNeedleAngle: 40,\n    maxNeedleAngle: 320,\n    outerEdgeCol:  '#0099CC',\n    innerCol:      '#fff',\n    pivotCol:      '#999',\n    needleCol:     '#0099CC',\n    unitsLabelCol: '#000',\n    tickLabelCol:  '#000',\n    tickColMaj:    '#0099CC',\n    tickColMin:    '#000',\n    tickFont: 'Open Sans',\n    unitsFont: 'Open Sans',\n    valueYOffset: 0,\n    showThresholdOnGauge: false,\n    showThresholdColorOnValue: false,\n    showLowerThresholdRange: false,\n    showMiddleThresholdRange: true,\n    showUpperThresholdRange: true,\n    animateNeedleValueTransition: true,\n    animateNeedleValueTransitionSpeed: 100\n  },\n};\n\nclass D3GaugePanelCtrl extends MetricsPanelCtrl {\n\n  constructor($scope, $injector, alertSrv) {\n    super($scope, $injector);\n    // merge existing settings with our defaults\n    _.defaults(this.panel, panelDefaults);\n    this.panel.gaugeDivId = 'd3gauge_svg_' + this.panel.id;\n    this.containerDivId = 'container_'+this.panel.gaugeDivId;\n    this.scoperef = $scope;\n    this.alertSrvRef = alertSrv;\n    this.initialized = false;\n    this.panelContainer = null;\n    this.panel.svgContainer = null;\n    this.svg = null;\n    this.panelWidth = null;\n    this.panelHeight = null;\n    this.gaugeObject = null;\n    this.data = {\n      value: 0,\n      valueFormatted: 0,\n      valueRounded: 0\n    };\n    this.series = [];\n    //console.log(\"D3GaugePanelCtrl constructor!\");\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    //this.events.on('render', this.onRender.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    //console.log(\"D3GaugePanelCtrl constructor done!\");\n  }\n\n  onInitEditMode() {\n    // determine the path to this plugin\n    var panels = grafanaBootData.settings.panels;\n    var thisPanel = panels[this.pluginId];\n    var thisPanelPath = thisPanel.baseUrl + '/';\n    // add the relative path to the partial\n    var optionsPath = thisPanelPath + 'partials/editor.options.html';\n    this.addEditorTab('Options', optionsPath, 2);\n    var radialMetricsPath = thisPanelPath + 'partials/editor.radialmetrics.html';\n    this.addEditorTab('Radial Metrics', radialMetricsPath, 3);\n    var thresholdingPath = thisPanelPath + 'partials/editor.thresholding.html';\n    this.addEditorTab('Thresholding', thresholdingPath, 4);\n    var mappingsPath = thisPanelPath + 'partials/editor.mappings.html';\n    this.addEditorTab('Value Mappings', mappingsPath, 5);\n  }\n\n  /**\n   * [setContainer description]\n   * @param {[type]} container [description]\n   */\n  setContainer(container) {\n    this.panelContainer = container;\n    this.panel.svgContainer = container;\n  }\n\n  // determine the width of a panel by the span and viewport\n  getPanelWidthBySpan() {\n    var viewPortWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    // get the pixels of a span\n    var pixelsPerSpan = viewPortWidth / 12;\n    // multiply num spans by pixelsPerSpan\n    var trueWidth = Math.round(this.panel.span * pixelsPerSpan);\n    return trueWidth;\n  }\n\n  getPanelHeight() {\n    // panel can have a fixed height set via \"General\" tab in panel editor\n    var tmpPanelHeight = this.panel.height;\n    if ((typeof tmpPanelHeight === 'undefined') || (tmpPanelHeight === \"\")) {\n      // grafana also supplies the height, try to use that if the panel does not have a height\n      tmpPanelHeight = String(this.height);\n      if (typeof tmpPanelHeight === 'undefined') {\n        // height still cannot be determined, get it from the row instead\n        tmpPanelHeight = this.row.height;\n        if (typeof tmpPanelHeight === 'undefined') {\n          // last resort - default to 250px (this should never happen)\n          tmpPanelHeight = \"250\";\n        }\n      }\n    }\n    // replace px\n    tmpPanelHeight = tmpPanelHeight.replace(\"px\",\"\");\n    // convert to numeric value\n    var actualHeight = parseInt(tmpPanelHeight);\n    return actualHeight;\n  }\n\n  clearSVG() {\n    if ($('#'+this.panel.gaugeDivId).length) {\n      //console.log(\"Clearing SVG id: \" + this.panel.gaugeDivId);\n      $('#'+this.panel.gaugeDivId).remove();\n    }\n  }\n\n  renderGauge() {\n    // update the values to be sent to the gauge constructor\n    this.setValues(this.data);\n    //this.clearSVG();\n    //console.log(\"Looking for: #\"+this.panel.gaugeDivId);\n    if ($('#'+this.panel.gaugeDivId).length) {\n      //console.log(\"Clearing SVG id: \" + this.panel.gaugeDivId);\n      $('#'+this.panel.gaugeDivId).remove();\n    } else {\n      //console.log(\"not found...\");\n    }\n    // use jQuery to get the height on our container\n    // TODO: Check if there is a \"title\" and offset size of gauge accordingly\n    var panelTitleOffset = 0;\n    if (this.panel.title !== \"\") {\n      panelTitleOffset = 25;\n    }\n    this.panelWidth = this.getPanelWidthBySpan();\n    this.panelHeight = this.getPanelHeight() - panelTitleOffset;\n    var margin = {top: 0, right: 0, bottom: 0, left: 10};\n    var width = this.panelWidth;\n    var height = this.panelHeight;\n\n    //console.log(\"Creating SVG id: \" + this.panel.gaugeDivId);\n\n    // check which is smaller, the height or the width and set the radius to be half of the lesser\n    var tmpGaugeRadius = parseFloat(this.panel.gauge.gaugeRadius);\n    // autosize if radius is set to zero\n    if (this.panel.gauge.gaugeRadius === 0) {\n      tmpGaugeRadius = this.panelHeight / 2;\n      if (this.panelWidth < this.panelHeight) {\n        tmpGaugeRadius = this.panelWidth / 2;\n      }\n      tmpGaugeRadius -= 10;\n    }\n\n    // set the width and height to be double the radius\n    var svg = d3.select(this.panel.svgContainer)\n      .append(\"svg\")\n      .attr(\"width\", Math.round(tmpGaugeRadius*2) + \"px\")\n      .attr(\"height\", Math.round(tmpGaugeRadius*2) + \"px\")\n      .attr(\"id\", this.panel.gaugeDivId)\n      .classed(\"svg-content-responsive\", true)\n      .append(\"g\");\n\n    var opt = {\n      minVal : this.panel.gauge.minValue,\n      maxVal : this.panel.gauge.maxValue,\n      tickSpaceMinVal: this.panel.gauge.tickSpaceMinVal,\n      tickSpaceMajVal: this.panel.gauge.tickSpaceMajVal,\n      gaugeUnits: this.panel.format,\n      gaugeRadius: tmpGaugeRadius,\n      pivotRadius: this.panel.gauge.pivotRadius,\n      padding: this.panel.gauge.padding,\n      edgeWidth: this.panel.gauge.edgeWidth,\n      tickEdgeGap: this.panel.gauge.tickEdgeGap,\n      tickLengthMaj: this.panel.gauge.tickLengthMaj,\n      tickLengthMin: this.panel.gauge.tickLengthMin,\n      needleTickGap: this.panel.gauge.needleTickGap,\n      needleLengthNeg: this.panel.gauge.needleLengthNeg,\n      ticknessGaugeBasis: this.panel.gauge.ticknessGaugeBasis,\n      needleWidth: this.panel.gauge.needleWidth,\n      tickWidthMaj: this.panel.gauge.tickWidthMaj,\n      tickWidthMin: this.panel.gauge.tickWidthMin,\n      unitsLabelFontSize: this.panel.gauge.unitsLabelFontSize,\n      labelFontSize: this.panel.gauge.labelFontSize,\n      zeroTickAngle: this.panel.gauge.zeroTickAngle,\n      maxTickAngle: this.panel.gauge.maxTickAngle,\n      zeroNeedleAngle: this.panel.gauge.zeroNeedleAngle,\n      maxNeedleAngle: this.panel.gauge.maxNeedleAngle,\n      outerEdgeCol:  this.panel.gauge.outerEdgeCol,\n      innerCol:      this.panel.gauge.innerCol,\n      pivotCol:      this.panel.gauge.pivotCol,\n      needleCol:     this.panel.gauge.needleCol,\n      unitsLabelCol: this.panel.gauge.unitsLabelCol,\n      tickLabelCol:  this.panel.gauge.tickLabelCol,\n      tickColMaj:    this.panel.gauge.tickColMaj,\n      tickColMin:    this.panel.gauge.tickColMin,\n      thresholds:    this.panel.thresholds,\n      showThresholdColorOnValue: this.panel.gauge.showThresholdColorOnValue,\n      showThresholdOnGauge: this.panel.gauge.showThresholdOnGauge,\n      showLowerThresholdRange: this.panel.gauge.showLowerThresholdRange,\n      showMiddleThresholdRange: this.panel.gauge.showMiddleThresholdRange,\n      showUpperThresholdRange: this.panel.gauge.showUpperThresholdRange,\n      thresholdColors: this.panel.colors,\n      needleValText : this.getValueText(),\n      needleVal : this.getValueRounded(),\n      tickFont: this.panel.gauge.tickFont,\n      unitsFont: this.panel.gauge.unitsFont,\n      valueYOffset: this.panel.gauge.valueYOffset,\n      animateNeedleValueTransition: this.panel.gauge.animateNeedleValueTransition,\n      animateNeedleValueTransitionSpeed: this.panel.gauge.animateNeedleValueTransitionSpeed,\n      tickMaps: this.panel.tickMaps\n    };\n    this.gaugeObject = new drawGauge(svg,opt);\n    this.svg = svg;\n  }\n\n  removeValueMap(map) {\n    var index = _.indexOf(this.panel.valueMaps, map);\n    this.panel.valueMaps.splice(index, 1);\n    this.render();\n  }\n\n  addValueMap() {\n    this.panel.valueMaps.push({value: '', op: '=', text: '' });\n  }\n\n  removeRangeMap(rangeMap) {\n    var index = _.indexOf(this.panel.rangeMaps, rangeMap);\n    this.panel.rangeMaps.splice(index, 1);\n    this.render();\n  }\n\n  addRangeMap() {\n    this.panel.rangeMaps.push({from: '', to: '', text: ''});\n  }\n\n  addTickMap() {\n    this.panel.tickMaps.push({value: 0, text: ''});\n  }\n  removeTickMap(tickMap) {\n    var index = _.indexOf(this.panel.tickMaps, tickMap);\n    this.panel.tickMaps.splice(index, 1);\n    this.render();\n  }\n\n  /**\n   * Ensure the min value is less than the max value, auto-adjust as needed\n   * @return void\n   */\n  validateLimitsMinValue() {\n    if (this.panel.gauge.minValue >= this.panel.gauge.maxValue) {\n      // set the maxValue to be the same as the minValue+1\n      this.panel.gauge.maxValue = this.panel.gauge.minValue + 1;\n      this.alertSrvRef.set(\"Problem!\", \"Minimum Value cannot be equal to or greater than Max Value, auto-adjusting Max Value to Minimum+1 (\" + this.panel.gauge.maxValue + \")\", 'warning', 10000);\n    }\n    this.render();\n  }\n\n  /**\n   * Ensure the max value is greater than the min value, auto-adjust as needed\n   * @return void\n   */\n  validateLimitsMaxValue() {\n    if (this.panel.gauge.maxValue <= this.panel.gauge.minValue) {\n      // set the minValue to be the same as the maxValue-1\n      this.panel.gauge.minValue = this.panel.gauge.maxValue - 1;\n      this.alertSrvRef.set(\"Problem!\", \"Maximum Value cannot be equal to or less than Min Value, auto-adjusting Min Value to Maximum-1 (\" + this.panel.gauge.minValue + \")\", 'warning', 10000);\n    }\n    this.render();\n  }\n\n  validateTransitionValue() {\n    if (this.panel.gauge.animateNeedleValueTransitionSpeed === null) {\n      this.panel.gauge.animateNeedleValueTransitionSpeed = 100;\n    }\n    if (this.panel.gauge.animateNeedleValueTransitionSpeed < 0) {\n      this.panel.gauge.animateNeedleValueTransitionSpeed = 0;\n    }\n    if (this.panel.gauge.animateNeedleValueTransitionSpeed > 60000) {\n      this.panel.gauge.animateNeedleValueTransitionSpeed = 60000;\n    }\n    this.render();\n  }\n\n  // sanity check for tick degree settings\n  validateGaugeTickDegreeValues() {\n    if ((this.panel.gauge.zeroTickAngle === null) ||\n        (this.panel.gauge.zeroTickAngle === \"\") ||\n        (this.panel.gauge.zeroTickAngle < 0) ||\n        (isNaN(this.panel.gauge.zeroTickAngle))\n      ){\n      // alert about the error, and set it to 60\n      this.panel.gauge.zeroTickAngle = 60;\n      this.alertSrvRef.set(\"Problem!\", \"Invalid Value for Zero Tick Angle, auto-setting to default of 60\", 'error', 10000);\n    }\n\n    if ((this.panel.gauge.maxTickAngle === null) ||\n        (this.panel.gauge.maxTickAngle === \"\") ||\n        (this.panel.gauge.maxTickAngle < 0) ||\n        (isNaN(this.panel.gauge.maxTickAngle))\n      ){\n      // alert about the error, and set it to 320\n      this.panel.gauge.maxTickAngle = 320;\n      this.alertSrvRef.set(\"Problem!\", \"Invalid Value for Max Tick Angle, auto-setting to default of 320\", 'error', 10000);\n    }\n\n    var gaugeTickDegrees = this.panel.gauge.maxTickAngle - this.panel.gauge.zeroTickAngle;\n    // make sure the total degrees does not exceed 360\n    if (gaugeTickDegrees > 360) {\n      // set to default values and alert\n      this.panel.gauge.zeroTickAngle = 60;\n      this.panel.gauge.maxTickAngle = 320;\n      this.alertSrvRef.set(\"Problem!\", \"Gauge tick angle difference is larger than 360 degrees, auto-setting to default values\", 'error', 10000);\n    }\n    // make sure it is \"positive\"\n    if (gaugeTickDegrees < 0) {\n      // set to default values and alert\n      this.panel.gauge.zeroTickAngle = 60;\n      this.panel.gauge.maxTickAngle = 320;\n      this.alertSrvRef.set(\"Problem!\", \"Gauge tick angle difference is less than 0 degrees, auto-setting to default values\", 'error', 10000);\n    }\n\n    // render\n    this.render();\n  }\n\n  // sanity check for Needle degree settings\n  validateGaugeNeedleDegreeValues() {\n    if ((this.panel.gauge.zeroNeedleAngle === null) ||\n        (this.panel.gauge.zeroNeedleAngle === \"\") ||\n        (this.panel.gauge.zeroNeedleAngle < 0) ||\n        (isNaN(this.panel.gauge.zeroNeedleAngle))\n      ){\n      // alert about the error, and set it to 60\n      this.panel.gauge.zeroNeedleAngle = 60;\n      this.alertSrvRef.set(\"Problem!\", \"Invalid Value for Zero Needle Angle, auto-setting to default of 60\", 'error', 10000);\n    }\n\n    if ((this.panel.gauge.maxNeedleAngle === null) ||\n        (this.panel.gauge.maxNeedleAngle === \"\") ||\n        (this.panel.gauge.maxNeedleAngle < 0) ||\n        (isNaN(this.panel.gauge.maxNeedleAngle))\n      ){\n      // alert about the error, and set it to 320\n      this.panel.gauge.maxNeedleAngle = 320;\n      this.alertSrvRef.set(\"Problem!\", \"Invalid Value for Max Needle Angle, auto-setting to default of 320\", 'error', 10000);\n    }\n\n    var gaugeNeedleDegrees = this.panel.gauge.maxNeedleAngle - this.panel.gauge.zeroNeedleAngle;\n    // make sure the total degrees does not exceed 360\n    if (gaugeNeedleDegrees > 360) {\n      // set to default values and alert\n      this.panel.gauge.zeroNeedleAngle = 60;\n      this.panel.gauge.maxNeedleAngle = 320;\n      this.alertSrvRef.set(\"Problem!\", \"Gauge needle angle difference is larger than 360 degrees, auto-setting to default values\", 'error', 10000);\n    }\n    // make sure it is \"positive\"\n    if (gaugeNeedleDegrees < 0) {\n      // set to default values and alert\n      this.panel.gauge.zeroNeedleAngle = 60;\n      this.panel.gauge.maxNeedleAngle = 320;\n      this.alertSrvRef.set(\"Problem!\", \"Gauge needle angle difference is less than 0 degrees, auto-setting to default values\", 'error', 10000);\n    }\n\n    // render\n    this.render();\n  }\n\n  validateRadialMetricValues() {\n    // make sure the spacing values are valid\n    if ((this.panel.gauge.tickSpaceMinVal === null) ||\n        (this.panel.gauge.tickSpaceMinVal === \"\") ||\n        (isNaN(this.panel.gauge.tickSpaceMinVal))\n      ){\n      // alert about the error, and set it to 1\n      this.panel.gauge.tickSpaceMinVal = 1;\n      this.alertSrvRef.set(\"Problem!\", \"Invalid Value for Tick Spacing Minor, auto-setting back to default of 1\", 'error', 10000);\n    }\n    if ((this.panel.gauge.tickSpaceMajVal === null) ||\n        (this.panel.gauge.tickSpaceMajVal === \"\") ||\n        (isNaN(this.panel.gauge.tickSpaceMajVal))\n      ){\n      // alert about the error, and set it to 10\n      this.panel.gauge.tickSpaceMajVal = 10;\n      this.alertSrvRef.set(\"Problem!\", \"Invalid Value for Tick Spacing Major, auto-setting back to default of 10\", 'error', 10000);\n    }\n    if ((this.panel.gauge.gaugeRadius === null) ||\n        (this.panel.gauge.gaugeRadius === \"\") ||\n        (isNaN(this.panel.gauge.gaugeRadius) ||\n        (this.panel.gauge.gaugeRadius < 0))\n      ){\n      // alert about the error, and set it to 0\n      this.panel.gauge.gaugeRadius = 0;\n      this.alertSrvRef.set(\"Problem!\", \"Invalid Value for Gauge Radius, auto-setting back to default of 0\", 'error', 10000);\n    }\n    this.render();\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    //console.log(\"d3gauge inside link\");\n    var gaugeByClass = elem.find('.grafana-d3-gauge');\n    //gaugeByClass.append('<center><div id=\"'+ctrl.containerDivId+'\"></div></center>');\n    gaugeByClass.append('<div id=\"'+ctrl.containerDivId+'\"></div>');\n    var container = gaugeByClass[0].childNodes[0];\n    ctrl.setContainer(container);\n    function render(){\n    \t\tctrl.renderGauge();\n    }\n    this.events.on('render', function() {\n\t\t\trender();\n\t\t\tctrl.renderingCompleted();\n\t  });\n  }\n\n\n  getDecimalsForValue(value) {\n    if (_.isNumber(this.panel.decimals)) {\n      return {decimals: this.panel.decimals, scaledDecimals: null};\n    }\n\n    var delta = value / 2;\n    var dec = -Math.floor(Math.log(delta) / Math.LN10);\n\n    var magn = Math.pow(10, -dec),\n        norm = delta / magn, // norm is between 1.0 and 10.0\n        size;\n\n    if (norm < 1.5) {\n      size = 1;\n    } else if (norm < 3) {\n      size = 2;\n      // special case for 2.5, requires an extra decimal\n      if (norm > 2.25) {\n        size = 2.5;\n        ++dec;\n      }\n    } else if (norm < 7.5) {\n      size = 5;\n    } else {\n      size = 10;\n    }\n\n    size *= magn;\n\n    // reduce starting decimals if not needed\n    if (Math.floor(value) === value) { dec = 0; }\n\n    var result = {};\n    result.decimals = Math.max(0, dec);\n    result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\n    return result;\n  }\n\n  setValues(data) {\n    data.flotpairs = [];\n    if (this.series.length > 1) {\n      var error = new Error();\n      error.message = 'Multiple Series Error';\n      error.data = 'Metric query returns ' + this.series.length +\n        ' series. Single Stat Panel expects a single series.\\n\\nResponse:\\n'+JSON.stringify(this.series);\n      throw error;\n    }\n\n    if (this.series && this.series.length > 0) {\n      var lastPoint = _.last(this.series[0].datapoints);\n      var lastValue = _.isArray(lastPoint) ? lastPoint[0] : null;\n\n      if (this.panel.operatorName === 'name') {\n        data.value = 0;\n        data.valueRounded = 0;\n        data.valueFormatted = this.series[0].alias;\n      } else if (_.isString(lastValue)) {\n        data.value = 0;\n        data.valueFormatted = _.escape(lastValue);\n        data.valueRounded = 0;\n      } else {\n        data.value = this.series[0].stats[this.panel.operatorName];\n        data.flotpairs = this.series[0].flotpairs;\n        var decimalInfo = this.getDecimalsForValue(data.value);\n        var formatFunc = kbn.valueFormats[this.panel.format];\n        data.valueFormatted = formatFunc(data.value, decimalInfo.decimals, decimalInfo.scaledDecimals);\n        data.valueRounded = kbn.roundValue(data.value, decimalInfo.decimals);\n      }\n\n      // Add $__name variable for using in prefix or postfix\n      data.scopedVars = {\n        __name: {\n          value: this.series[0].label\n        }\n      };\n    }\n\n    // check value to text mappings if its enabled\n    if (this.panel.mappingType === 1) {\n      for (var i = 0; i < this.panel.valueMaps.length; i++) {\n        var map = this.panel.valueMaps[i];\n        // special null case\n        if (map.value === 'null') {\n          if (data.value === null || data.value === void 0) {\n            data.valueFormatted = map.text;\n            return;\n          }\n          continue;\n        }\n\n        // value/number to text mapping\n        var value = parseFloat(map.value);\n        if (value === data.valueRounded) {\n          data.valueFormatted = map.text;\n          return;\n        }\n      }\n    } else if (this.panel.mappingType === 2) {\n      for (var j = 0; j < this.panel.rangeMaps.length; j++) {\n        var rangeMap = this.panel.rangeMaps[j];\n        // special null case\n        if (rangeMap.from === 'null' && rangeMap.to === 'null') {\n          if (data.value === null || data.value === void 0) {\n            data.valueFormatted = rangeMap.text;\n            return;\n          }\n          continue;\n        }\n\n        // value/number to range mapping\n        var from = parseFloat(rangeMap.from);\n        var to = parseFloat(rangeMap.to);\n        if (to >= data.valueRounded && from <= data.valueRounded) {\n          data.valueFormatted = rangeMap.text;\n          return;\n        }\n      }\n    }\n\n    if (data.value === null || data.value === void 0) {\n      data.valueFormatted = \"no value\";\n    }\n  }\n\n  getValueText() {\n    return this.data.valueFormatted;\n  }\n\n  getValueRounded() {\n    return this.data.valueRounded;\n  }\n\n  setUnitFormat(subItem) {\n    this.panel.format = subItem.value;\n    this.render();\n  }\n\n  onDataError(err) {\n    this.onDataReceived([]);\n  }\n\n  onDataReceived(dataList) {\n    this.series = dataList.map(this.seriesHandler.bind(this));\n    var data = {};\n    this.setValues(data);\n    this.data = data;\n    if(this.gaugeObject !== null){\n      this.gaugeObject.updateGauge(data.value, data.valueFormatted, data.valueRounded);\n    } else {\n      // render gauge\n      this.render();\n    }\n  }\n\n  seriesHandler(seriesData) {\n    var series = new TimeSeries({\n      datapoints: seriesData.datapoints,\n      alias: seriesData.target,\n    });\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n    return series;\n  }\n\n  invertColorOrder() {\n    var tmp = this.panel.colors[0];\n    this.panel.colors[0] = this.panel.colors[2];\n    this.panel.colors[2] = tmp;\n    this.render();\n  }\n}\n\nfunction getColorForValue(data, value) {\n  for (var i = data.thresholds.length; i > 0; i--) {\n    if (value >= data.thresholds[i-1]) {\n      return data.colorMap[i];\n    }\n  }\n  return _.first(data.colorMap);\n}\n\nD3GaugePanelCtrl.templateUrl = 'partials/template.html';\nexport {\n\tD3GaugePanelCtrl,\n\tD3GaugePanelCtrl as MetricsPanelCtrl\n};\n"]}