{"version":3,"sources":["../src/ctrl.js"],"names":["getColorForValue","data","value","i","thresholds","length","colorMap","_","first","MetricsPanelCtrl","$","kbn","config","TimeSeries","d3","panelDefaults","fontSizes","fontTypes","unitFormats","getUnitFormats","operatorNameOptions","valueMaps","op","text","mappingTypes","name","rangeMaps","from","to","mappingType","colors","decimals","format","operatorName","gauge","minValue","maxValue","tickSpaceMinVal","tickSpaceMajVal","gaugeUnits","gaugeRadius","pivotRadius","padding","edgeWidth","tickEdgeGap","tickLengthMaj","tickLengthMin","needleTickGap","needleLengthNeg","ticknessGaugeBasis","needleWidth","tickWidthMaj","tickWidthMin","unitsLabelFontSize","labelFontSize","zeroTickAngle","maxTickAngle","zeroNeedleAngle","maxNeedleAngle","outerEdgeCol","innerCol","pivotCol","needleCol","unitsLabelCol","tickLabelCol","tickColMaj","tickColMin","tickFont","unitsFont","showThresholdOnGauge","showThresholdColorOnValue","showLowerThresholdRange","showMiddleThresholdRange","showUpperThresholdRange","animateNeedleValueTransition","animateNeedleValueTransitionSpeed","D3GaugePanelCtrl","$scope","$injector","alertSrv","defaults","panel","gaugeDivId","id","containerDivId","scoperef","alertSrvRef","initialized","panelContainer","ughContainer","svg","panelWidth","panelHeight","gaugeObject","valueFormatted","valueRounded","series","events","on","onInitEditMode","bind","onDataReceived","onDataError","panels","grafanaBootData","settings","thisPanel","pluginId","thisPanelPath","baseUrl","optionsPath","addEditorTab","radialMetricsPath","thresholdingPath","mappingsPath","container","tmpPanelWidth","clientWidth","getPanelHeight","actualWidth","tmpPanelHeight","ctrl","height","row","replace","actualHeight","parseInt","console","log","remove","setValues","getPanelWidth","margin","top","right","bottom","left","width","select","append","attr","classed","tmpGaugeRadius","parseFloat","opt","minVal","maxVal","thresholdColors","needleValText","getValueText","needleVal","getValueRounded","drawGauge","map","index","indexOf","splice","render","push","rangeMap","isNaN","set","scope","elem","attrs","gaugeByClass","find","childNodes","setContainer","renderGauge","renderingCompleted","isNumber","scaledDecimals","delta","dec","Math","floor","LN10","magn","pow","norm","size","result","max","flotpairs","error","Error","message","JSON","stringify","lastPoint","last","datapoints","lastValue","isArray","alias","isString","escape","stats","decimalInfo","getDecimalsForValue","formatFunc","valueFormats","roundValue","scopedVars","__name","label","j","subItem","err","dataList","seriesHandler","updateGauge","seriesData","target","getFlotPairs","nullPointMode","tmp","templateUrl"],"mappings":"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","file":"ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport kbn from 'app/core/utils/kbn';\nimport config from 'app/core/config';\nimport TimeSeries from 'app/core/time_series2';\n//import * as d3 from '../bower_components/d3/d3.js';\nimport * as d3 from './external/d3.v3.min';\nimport './css/panel.css!';\nimport './external/d3gauge';\n\nconst panelDefaults = {\n  fontSizes: [4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70],\n  fontTypes: [\n    'Arial', 'Avant Garde', 'Bookman',\n    'Consolas', 'Courier', 'Courier New',\n    'Garamond', 'Helvetica', 'Open Sans',\n    'Palatino', 'Times', 'Times New Roman',\n    'Verdana'\n  ],\n  unitFormats: kbn.getUnitFormats(),\n  operatorNameOptions: ['min','max','avg', 'current', 'total', 'name'],\n  valueMaps: [\n    { value: 'null', op: '=', text: 'N/A' }\n  ],\n  mappingTypes: [\n    {name: 'value to text', value: 1},\n    {name: 'range to text', value: 2},\n  ],\n  rangeMaps: [\n    { from: 'null', to: 'null', text: 'N/A' }\n  ],\n  mappingType: 1,\n  thresholds: '',\n  colors: [\"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\"],\n  decimals: 2, // decimal precision\n  format: 'none', // unit format\n  operatorName: 'avg', // operator applied to time series\n  gauge: {\n    minValue: 0,\n    maxValue: 100,\n    tickSpaceMinVal: 1,\n    tickSpaceMajVal: 10,\n    gaugeUnits: '', // no units by default, this will be selected by user\n    gaugeRadius: 0, // 0 for auto-scale\n    pivotRadius: 0.1,\n    padding: 0.05,\n    edgeWidth: 0.05,\n    tickEdgeGap: 0.05,\n    tickLengthMaj: 0.15,\n    tickLengthMin: 0.05,\n    needleTickGap: 0.05,\n    needleLengthNeg: 0.2,\n    ticknessGaugeBasis: 200,\n    needleWidth: 5,\n    tickWidthMaj: 5,\n    tickWidthMin: 1,\n    unitsLabelFontSize: 22,\n    labelFontSize: 18,\n    zeroTickAngle: 60,\n    maxTickAngle: 300,\n    zeroNeedleAngle: 40,\n    maxNeedleAngle: 320,\n    outerEdgeCol:  '#0099CC',\n    innerCol:      '#fff',\n    pivotCol:      '#999',\n    needleCol:     '#0099CC',\n    unitsLabelCol: '#000',\n    tickLabelCol:  '#000',\n    tickColMaj:    '#0099CC',\n    tickColMin:    '#000',\n    tickFont: 'Open Sans',\n    unitsFont: 'Open Sans',\n    showThresholdOnGauge: false,\n    showThresholdColorOnValue: false,\n    showLowerThresholdRange: false,\n    showMiddleThresholdRange: true,\n    showUpperThresholdRange: true,\n    animateNeedleValueTransition: true,\n    animateNeedleValueTransitionSpeed: 100\n  },\n};\n\nclass D3GaugePanelCtrl extends MetricsPanelCtrl {\n\n  constructor($scope, $injector, alertSrv) {\n    super($scope, $injector);\n    // merge existing settings with our defaults\n    _.defaults(this.panel, panelDefaults);\n    this.panel.gaugeDivId = 'd3gauge_svg_' + this.panel.id;\n    this.containerDivId = 'container_'+this.panel.gaugeDivId;\n    this.scoperef = $scope;\n    this.alertSrvRef = alertSrv;\n    this.initialized = false;\n    this.panelContainer = null;\n    this.panel.ughContainer = null;\n    this.svg = null;\n    this.panelWidth = null;\n    this.panelHeight = null;\n    this.gaugeObject = null;\n    this.data = {\n      value: 0,\n      valueFormatted: 0,\n      valueRounded: 0\n    };\n    this.series = [];\n    //console.log(\"D3GaugePanelCtrl constructor!\");\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    //this.events.on('render', this.onRender.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    //console.log(\"D3GaugePanelCtrl constructor done!\");\n  }\n\n  onInitEditMode() {\n    // determine the path to this plugin\n    var panels = grafanaBootData.settings.panels;\n    var thisPanel = panels[this.pluginId];\n    var thisPanelPath = thisPanel.baseUrl + '/';\n    // add the relative path to the partial\n    var optionsPath = thisPanelPath + 'partials/editor.options.html';\n    this.addEditorTab('Options', optionsPath, 2);\n    var radialMetricsPath = thisPanelPath + 'partials/editor.radialmetrics.html';\n    this.addEditorTab('Radial Metrics', radialMetricsPath, 3);\n    var thresholdingPath = thisPanelPath + 'partials/editor.thresholding.html';\n    this.addEditorTab('Thresholding', thresholdingPath, 4);\n    var mappingsPath = thisPanelPath + 'partials/editor.mappings.html';\n    this.addEditorTab('Value Mappings', mappingsPath, 5);\n  }\n\n  /**\n   * [setContainer description]\n   * @param {[type]} container [description]\n   */\n  setContainer(container) {\n    this.panelContainer = container;\n    this.panel.ughContainer = container;\n  }\n\n  getPanelWidth() {\n    // with a full sized panel, this comes back as zero, so calculate from the div panel instead\n    var tmpPanelWidth = this.panel.ughContainer.clientWidth;\n    if (tmpPanelWidth === 0) {\n      // just use the height...\n      tmpPanelWidth = this.getPanelHeight();\n      tmpPanelWidth -= 24;\n      if (tmpPanelWidth < 250) {\n        tmpPanelWidth = 250;\n      }\n      return tmpPanelWidth;\n    }\n    var actualWidth = tmpPanelWidth;\n    return actualWidth;\n  }\n\n  getPanelHeight() {\n    // panel can have a fixed height via options\n    var tmpPanelHeight = this.$scope.ctrl.panel.height;\n    // if that is blank, try to get it from our row\n    if (typeof tmpPanelHeight === 'undefined') {\n      // get from the row instead\n      tmpPanelHeight = this.row.height;\n      // default to 250px if that was undefined also\n      if (typeof tmpPanelHeight === 'undefined') {\n        tmpPanelHeight = 250;\n      }\n    }\n    else {\n      // convert to numeric value\n      tmpPanelHeight = tmpPanelHeight.replace(\"px\",\"\");\n    }\n    var actualHeight = parseInt(tmpPanelHeight);\n    // grafana minimum height for a panel is 250px\n    if (actualHeight < 250) {\n      actualHeight = 250;\n    }\n    return actualHeight;\n  }\n\n  clearSVG() {\n    if ($('#'+this.panel.gaugeDivId).length) {\n      console.log(\"Clearing SVG id: \" + this.panel.gaugeDivId);\n      $('#'+this.panel.gaugeDivId).remove();\n    }\n  }\n\n  renderGauge() {\n    // update the values to be sent to the gauge constructor\n    this.setValues(this.data);\n    //this.clearSVG();\n    console.log(\"Looking for: #\"+this.panel.gaugeDivId);\n    if ($('#'+this.panel.gaugeDivId).length) {\n      console.log(\"Clearing SVG id: \" + this.panel.gaugeDivId);\n      $('#'+this.panel.gaugeDivId).remove();\n    } else {\n      console.log(\"not found...\");\n    }\n    // use jQuery to get the height on our container\n    this.panelWidth = this.getPanelWidth();\n    this.panelHeight = this.getPanelHeight();\n    var margin = {top: 10, right: 0, bottom: 30, left: 0};\n    var width = this.panelWidth;\n    var height = this.panelHeight;\n\n    //console.log(\"Creating SVG id: \" + this.panel.gaugeDivId);\n\n    var svg = d3.select(this.panel.ughContainer)\n      .append(\"svg\")\n      .attr(\"width\", width + \"px\")\n      .attr(\"height\", (height + 24) + \"px\")\n      .attr(\"id\", this.panel.gaugeDivId)\n      .classed(\"svg-content-responsive\", true)\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    // check which is smaller, the height or the width and set the radius to be half of the lesser\n    var tmpGaugeRadius = parseFloat(this.panel.gauge.gaugeRadius);\n    // autosize if radius is set to zero\n    if (this.panel.gauge.gaugeRadius === 0) {\n      tmpGaugeRadius = this.panelHeight / 2;\n      if (this.panelWidth < this.panelHeight) {\n        tmpGaugeRadius = this.panelWidth / 2;\n      }\n      tmpGaugeRadius -= 10;\n    }\n    var opt = {\n      minVal : this.panel.gauge.minValue,\n      maxVal : this.panel.gauge.maxValue,\n      tickSpaceMinVal: this.panel.gauge.tickSpaceMinVal,\n      tickSpaceMajVal: this.panel.gauge.tickSpaceMajVal,\n      gaugeUnits: this.panel.format,\n      gaugeRadius: tmpGaugeRadius,\n      pivotRadius: this.panel.gauge.pivotRadius,\n      padding: this.panel.gauge.padding,\n      edgeWidth: this.panel.gauge.edgeWidth,\n      tickEdgeGap: this.panel.gauge.tickEdgeGap,\n      tickLengthMaj: this.panel.gauge.tickLengthMaj,\n      tickLengthMin: this.panel.gauge.tickLengthMin,\n      needleTickGap: this.panel.gauge.needleTickGap,\n      needleLengthNeg: this.panel.gauge.needleLengthNeg,\n      ticknessGaugeBasis: this.panel.gauge.ticknessGaugeBasis,\n      needleWidth: this.panel.gauge.needleWidth,\n      tickWidthMaj: this.panel.gauge.tickWidthMaj,\n      tickWidthMin: this.panel.gauge.tickWidthMin,\n      unitsLabelFontSize: this.panel.gauge.unitsLabelFontSize,\n      labelFontSize: this.panel.gauge.labelFontSize,\n      zeroTickAngle: this.panel.gauge.zeroTickAngle,\n      maxTickAngle: this.panel.gauge.maxTickAngle,\n      zeroNeedleAngle: this.panel.gauge.zeroNeedleAngle,\n      maxNeedleAngle: this.panel.gauge.maxNeedleAngle,\n      outerEdgeCol:  this.panel.gauge.outerEdgeCol,\n      innerCol:      this.panel.gauge.innerCol,\n      pivotCol:      this.panel.gauge.pivotCol,\n      needleCol:     this.panel.gauge.needleCol,\n      unitsLabelCol: this.panel.gauge.unitsLabelCol,\n      tickLabelCol:  this.panel.gauge.tickLabelCol,\n      tickColMaj:    this.panel.gauge.tickColMaj,\n      tickColMin:    this.panel.gauge.tickColMin,\n      thresholds:    this.panel.thresholds,\n      showThresholdColorOnValue: this.panel.gauge.showThresholdColorOnValue,\n      showThresholdOnGauge: this.panel.gauge.showThresholdOnGauge,\n      showLowerThresholdRange: this.panel.gauge.showLowerThresholdRange,\n      showMiddleThresholdRange: this.panel.gauge.showMiddleThresholdRange,\n      showUpperThresholdRange: this.panel.gauge.showUpperThresholdRange,\n      thresholdColors: this.panel.colors,\n      needleValText : this.getValueText(),\n      needleVal : this.getValueRounded(),\n      tickFont: this.panel.gauge.tickFont,\n      unitsFont: this.panel.gauge.unitsFont,\n      animateNeedleValueTransition: this.panel.gauge.animateNeedleValueTransition,\n      animateNeedleValueTransitionSpeed: this.panel.gauge.animateNeedleValueTransitionSpeed\n    };\n    this.gaugeObject = new drawGauge(svg,opt);\n    this.svg = svg;\n  }\n\n  removeValueMap(map) {\n    var index = _.indexOf(this.panel.valueMaps, map);\n    this.panel.valueMaps.splice(index, 1);\n    this.render();\n  }\n\n  addValueMap() {\n    this.panel.valueMaps.push({value: '', op: '=', text: '' });\n  }\n\n  removeRangeMap(rangeMap) {\n    var index = _.indexOf(this.panel.rangeMaps, rangeMap);\n    this.panel.rangeMaps.splice(index, 1);\n    this.render();\n  }\n\n  addRangeMap() {\n    this.panel.rangeMaps.push({from: '', to: '', text: ''});\n  }\n\n  validateTransitionValue() {\n    if (this.panel.gauge.animateNeedleValueTransitionSpeed === null) {\n      this.panel.gauge.animateNeedleValueTransitionSpeed = 100;\n    }\n    if (this.panel.gauge.animateNeedleValueTransitionSpeed < 0) {\n      this.panel.gauge.animateNeedleValueTransitionSpeed = 0;\n    }\n    if (this.panel.gauge.animateNeedleValueTransitionSpeed > 60000) {\n      this.panel.gauge.animateNeedleValueTransitionSpeed = 60000;\n    }\n    this.render();\n  }\n\n  validateRadialMetricValues() {\n    // make sure the spacing values are valid\n    if ((this.panel.gauge.tickSpaceMinVal === null) ||\n        (this.panel.gauge.tickSpaceMinVal === \"\") ||\n        (isNaN(this.panel.gauge.tickSpaceMinVal))\n      ){\n      // alert about the error, and set it to 1\n      this.panel.gauge.tickSpaceMinVal = 1;\n      this.alertSrvRef.set(\"Problem!\", \"Invalid Value for Tick Spacing Minor, auto-setting back to default of 1\", 'error', 10000);\n    }\n    if ((this.panel.gauge.tickSpaceMajVal === null) ||\n        (this.panel.gauge.tickSpaceMajVal === \"\") ||\n        (isNaN(this.panel.gauge.tickSpaceMajVal))\n      ){\n      // alert about the error, and set it to 10\n      this.panel.gauge.tickSpaceMajVal = 10;\n      this.alertSrvRef.set(\"Problem!\", \"Invalid Value for Tick Spacing Major, auto-setting back to default of 10\", 'error', 10000);\n    }\n    if ((this.panel.gauge.gaugeRadius === null) ||\n        (this.panel.gauge.gaugeRadius === \"\") ||\n        (isNaN(this.panel.gauge.gaugeRadius) ||\n        (this.panel.gauge.gaugeRadius < 0))\n      ){\n      // alert about the error, and set it to 0\n      this.panel.gauge.gaugeRadius = 0;\n      this.alertSrvRef.set(\"Problem!\", \"Invalid Value for Gauge Radius, auto-setting back to default of 0\", 'error', 10000);\n    }\n    this.render();\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    //console.log(\"d3gauge inside link\");\n    var gaugeByClass = elem.find('.grafana-d3-gauge');\n    gaugeByClass.append('<div id=\"'+ctrl.containerDivId+'\"></div>');\n    var container = gaugeByClass[0].childNodes[0];\n    ctrl.setContainer(container);\n\n    function render(){\n    \t\tctrl.renderGauge();\n    }\n    this.events.on('render', function() {\n\t\t\trender();\n\t\t\tctrl.renderingCompleted();\n\t  });\n  }\n\n\n  getDecimalsForValue(value) {\n    if (_.isNumber(this.panel.decimals)) {\n      return {decimals: this.panel.decimals, scaledDecimals: null};\n    }\n\n    var delta = value / 2;\n    var dec = -Math.floor(Math.log(delta) / Math.LN10);\n\n    var magn = Math.pow(10, -dec),\n        norm = delta / magn, // norm is between 1.0 and 10.0\n        size;\n\n    if (norm < 1.5) {\n      size = 1;\n    } else if (norm < 3) {\n      size = 2;\n      // special case for 2.5, requires an extra decimal\n      if (norm > 2.25) {\n        size = 2.5;\n        ++dec;\n      }\n    } else if (norm < 7.5) {\n      size = 5;\n    } else {\n      size = 10;\n    }\n\n    size *= magn;\n\n    // reduce starting decimals if not needed\n    if (Math.floor(value) === value) { dec = 0; }\n\n    var result = {};\n    result.decimals = Math.max(0, dec);\n    result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\n    return result;\n  }\n\n  setValues(data) {\n    data.flotpairs = [];\n    if (this.series.length > 1) {\n      var error = new Error();\n      error.message = 'Multiple Series Error';\n      error.data = 'Metric query returns ' + this.series.length +\n        ' series. Single Stat Panel expects a single series.\\n\\nResponse:\\n'+JSON.stringify(this.series);\n      throw error;\n    }\n\n    if (this.series && this.series.length > 0) {\n      var lastPoint = _.last(this.series[0].datapoints);\n      var lastValue = _.isArray(lastPoint) ? lastPoint[0] : null;\n\n      if (this.panel.operatorName === 'name') {\n        data.value = 0;\n        data.valueRounded = 0;\n        data.valueFormatted = this.series[0].alias;\n      } else if (_.isString(lastValue)) {\n        data.value = 0;\n        data.valueFormatted = _.escape(lastValue);\n        data.valueRounded = 0;\n      } else {\n        data.value = this.series[0].stats[this.panel.operatorName];\n        data.flotpairs = this.series[0].flotpairs;\n        var decimalInfo = this.getDecimalsForValue(data.value);\n        var formatFunc = kbn.valueFormats[this.panel.format];\n        data.valueFormatted = formatFunc(data.value, decimalInfo.decimals, decimalInfo.scaledDecimals);\n        data.valueRounded = kbn.roundValue(data.value, decimalInfo.decimals);\n      }\n\n      // Add $__name variable for using in prefix or postfix\n      data.scopedVars = {\n        __name: {\n          value: this.series[0].label\n        }\n      };\n    }\n\n    // check value to text mappings if its enabled\n    if (this.panel.mappingType === 1) {\n      for (var i = 0; i < this.panel.valueMaps.length; i++) {\n        var map = this.panel.valueMaps[i];\n        // special null case\n        if (map.value === 'null') {\n          if (data.value === null || data.value === void 0) {\n            data.valueFormatted = map.text;\n            return;\n          }\n          continue;\n        }\n\n        // value/number to text mapping\n        var value = parseFloat(map.value);\n        if (value === data.valueRounded) {\n          data.valueFormatted = map.text;\n          return;\n        }\n      }\n    } else if (this.panel.mappingType === 2) {\n      for (var j = 0; j < this.panel.rangeMaps.length; j++) {\n        var rangeMap = this.panel.rangeMaps[j];\n        // special null case\n        if (rangeMap.from === 'null' && rangeMap.to === 'null') {\n          if (data.value === null || data.value === void 0) {\n            data.valueFormatted = rangeMap.text;\n            return;\n          }\n          continue;\n        }\n\n        // value/number to range mapping\n        var from = parseFloat(rangeMap.from);\n        var to = parseFloat(rangeMap.to);\n        if (to >= data.valueRounded && from <= data.valueRounded) {\n          data.valueFormatted = rangeMap.text;\n          return;\n        }\n      }\n    }\n\n    if (data.value === null || data.value === void 0) {\n      data.valueFormatted = \"no value\";\n    }\n  }\n\n  getValueText() {\n    return this.data.valueFormatted;\n  }\n\n  getValueRounded() {\n    return this.data.valueRounded;\n  }\n\n  setUnitFormat(subItem) {\n    this.panel.format = subItem.value;\n    this.render();\n  }\n\n  onDataError(err) {\n    this.onDataReceived([]);\n  }\n\n  onDataReceived(dataList) {\n    this.series = dataList.map(this.seriesHandler.bind(this));\n    var data = {};\n    this.setValues(data);\n    this.data = data;\n    if(this.gaugeObject !== null){\n      this.gaugeObject.updateGauge(data.value, data.valueFormatted, data.valueRounded);\n    } else {\n      // render gauge\n      this.render();\n    }\n  }\n\n  seriesHandler(seriesData) {\n    var series = new TimeSeries({\n      datapoints: seriesData.datapoints,\n      alias: seriesData.target,\n    });\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n    return series;\n  }\n\n  invertColorOrder() {\n    var tmp = this.panel.colors[0];\n    this.panel.colors[0] = this.panel.colors[2];\n    this.panel.colors[2] = tmp;\n    this.render();\n  }\n}\n\nfunction getColorForValue(data, value) {\n  for (var i = data.thresholds.length; i > 0; i--) {\n    if (value >= data.thresholds[i-1]) {\n      return data.colorMap[i];\n    }\n  }\n  return _.first(data.colorMap);\n}\n\nD3GaugePanelCtrl.templateUrl = 'partials/template.html';\nexport {\n\tD3GaugePanelCtrl,\n\tD3GaugePanelCtrl as MetricsPanelCtrl\n};\n"]}